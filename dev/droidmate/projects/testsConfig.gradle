// DroidMate, an automated execution generator for Android apps.
// Copyright (C) 2012-2016 Konrad Jamrozik
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// email: jamrozik@st.cs.uni-saarland.de
// web: www.droidmate.org


/*
    Adds a new testFixtures source set which should contain utilities/fixtures to assist in unit testing
    classes from the main source set.

    The test fixtures are automatically made available to the test classpath.

    The gradle/groovyProject.gradle script automatically applies this if a project has a src/testFixtures dir.
*/

// http://stackoverflow.com/a/37423632/986533
//configurations {
//  outputDirs
//
//  testFixturesCompile.extendsFrom compile
//  testFixturesRuntime.extendsFrom runtime, testFixturesCompile
//
//  // Expose configurations that include the test fixture classes for clients to use
//  testFixturesUsageCompile.extendsFrom testFixturesCompile, outputDirs
//  testFixturesUsageRuntime.extendsFrom testFixturesRuntime, testFixturesUsageCompile
//
//  // Assume that the project wants to use the fixtures for its tests
//  testCompile.extendsFrom testFixturesUsageCompile
//  testRuntime.extendsFrom testFixturesUsageRuntime
//}
//
//sourceSets {
//  testFixtures {
//    compileClasspath = sourceSets.main.output + configurations.testFixturesCompile
//    runtimeClasspath = output + compileClasspath + configurations.testFixturesRuntime
//  }
//}
//
//dependencies {
//  outputDirs sourceSets.testFixtures.output
//  testFixturesUsageCompile project(project.path)
//}
//
//plugins.withType(IdeaPlugin) {
//  idea {
//    module {
//      testSourceDirs += sourceSets.testFixtures.groovy.srcDirs
//      testSourceDirs += sourceSets.testFixtures.resources.srcDirs
//    }
//  }
//}
//
//plugins.withType(org.gradle.plugins.ide.eclipse.EclipsePlugin) {
//  eclipse {
//    classpath {
//      plusConfigurations.add(configurations.testFixturesCompile)
//      plusConfigurations.add(configurations.testFixturesRuntime)
//
//      //avoiding the certain output directories from the classpath in Eclipse
//      minusConfigurations.add(configurations.outputDirs)
//    }
//  }
//}


// -------------

/*
 This file enables projects to depend on other project's 'test' configuration.
 Based on: http://stackoverflow.com/a/5153162/986533
 
 Usage:
 dependencies {
    testCompile project(path: ':aProject', configuration: 'tests')
}
*/

//task testJar(type: Jar, dependsOn: testClasses) {
//  baseName = "test-${project.archivesBaseName}"
//  from sourceSets.test.output
//}
//
//configurations {
//  tests
//}
//
//artifacts {
//  tests testJar
//}