// DroidMate, an automated execution generator for Android apps.
// Copyright (C) 2012-2018. Saarland University
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// Current Maintainers:
// Nataniel Borges Jr. <nataniel dot borges at cispa dot saarland>
// Jenny Hotzkow <jenny dot hotzkow at cispa dot saarland>
//
// Former Maintainers:
// Konrad Jamrozik <jamrozik at st dot cs dot uni-saarland dot de>
//
// web: www.droidmate.org
apply plugin: 'kotlin'

apply from: project(":projects").file("debug.gradle")

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependOnJunit(project)
evaluationDependsOn(':projects:lib-common')
evaluationDependsOn(':projects:lib-kotlin')
compileTestJava.dependsOn tasks.getByPath(':projects:lib-common:testClasses')
compileTestJava.dependsOn tasks.getByPath(':projects:lib-kotlin:testClasses')
dependWithTest([project, ":projects:lib-kotlin", "kotlin"])
dependWithTest([project, ":projects:lib-common", "kotlin"])

kotlin {
	experimental {
		coroutines 'enable'
	}
}
repositories{
	jcenter() // required for coroutines
}

dependencies {
	compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5"

	compile("com.github.natanieljr:konrads_utilities:$utilities_version") {
    exclude group: "org.slf4j", module: "slf4j-simple"
  }

  testCompile 'org.hamcrest:hamcrest-core:1.3'

  compile project(":projects:uiautomator-daemon-lib")

  compile 'com.beust:jcommander:1.35'
  compile 'com.google.guava:guava:19.0'
  compile 'org.apache.commons:commons-lang3:3.3'
  compile 'commons-io:commons-io:2.4'
  compile 'org.apache.commons:commons-exec:1.2'
  compile 'org.slf4j:slf4j-api:1.7.25'
  compile 'ch.qos.logback:logback-classic:1.0.13'
  compile 'ch.qos.logback:logback-core:1.0.13'
  compile 'net.sf.opencsv:opencsv:2.3'

  // Fast serialization library
  compile 'de.ruedigermoeller:fst:2.56'

  // For visualizing device GUI model graphs
  compile 'org.graphstream:gs-core:1.3'

  // Filesystem stubbing
  compile 'com.google.jimfs:jimfs:1.0'

  compile 'nz.ac.waikato.cms.weka:weka-stable:3.8.1'

  testCompile 'org.xmlunit:xmlunit-core:2.1.1'

  // Only for org.droidmate.tests_misc.JavaReprosTest.BBoxError
  testCompile 'de.erichseifert.vectorgraphics2d:VectorGraphics2D:0.10'

  testCompile 'com.nhaarman:mockito-kotlin:1.5.0'

}

apply from: file("resources.gradle")

configureTest([project, ['**/LibKotlinTestSuite.class']])
test.configure {
  inputs.dir apkFixturesDir.absolutePath
}

apply from: project(":projects").file("maven.gradle")

/* WISH right now logback.groovy is in the built jar, thus making it hard to replace:
 http://stackoverflow.com/a/18275945/986533
 http://stackoverflow.com/a/26452714/986533

 More precisely, because it is in resources dir of main sourceSet, it gets deployed to the jar with :jar task. Ideally it
 should not be in the jar at all, nor in the distribution ('application' plugin / 'installDist' task). See the links above
 on the better setup.
*/

sourceSets {
  integrationTest {
    kotlin {
      resources {
        srcDir 'src/main/resources'
      }
//      compileClasspath += sourceSets.main.runtimeClasspath
    }
    test {
      resources {
        srcDir 'src/test/resources'
      }
//      compileClasspath += sourceSets.test.runtimeClasspath
 //     runtimeClasspath += sourceSets.test.runtimeClasspath // ***)
    }
  }
}

