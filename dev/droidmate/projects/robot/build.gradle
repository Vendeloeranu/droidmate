// Copyright (c) 2012-2016 Saarland University
// All rights reserved.
//
// Author: Konrad Jamrozik, jamrozik@st.cs.uni-saarland.de
//
// This file is part of the "DroidMate" project.
//
// www.droidmate.org

apply plugin: 'groovy'

compileJava.sourceCompatibility = JavaVersion.VERSION_1_8
compileJava.targetCompatibility = JavaVersion.VERSION_1_8


// For explanation of this code, see comments in [command build.gradle]
configurations {forceJunitPriority}
sourceSets.test.runtimeClasspath = configurations.forceJunitPriority + sourceSets.test.runtimeClasspath
sourceSets.test.compileClasspath = configurations.forceJunitPriority + sourceSets.test.compileClasspath

// For explanation of this code, see comments in [command build.gradle]
sourceSets.test.runtimeClasspath += project(":projects:core").sourceSets.test.runtimeClasspath

// For explanation of this code, see comments in [command build.gradle]
sourceSets.main.runtimeClasspath += project(":projects:core").sourceSets.main.runtimeClasspath

// [command build.gradle]: https://github.com/konrad-jamrozik/droidmate/blob/d50bbe0667b3a0e97652357a30653d70c969fec5/dev/droidmate/projects/command/build.gradle

String libsRobotDirPath = "libs_robot"
def osIsWindows() {
  if (System.properties['os.name'].toLowerCase().contains('windows'))
    1 else 0
}
// Returns the path to directory of OS-dependent library required to interact with a robot through serial port.
def robotLibDir = {
  if (osIsWindows())
  // not sure if the libraries in this dir will work on windows versions different than Windows 7 x64
    return "$projectDir/$libsRobotDirPath/Windows_7"
  else
    return "$projectDir/$libsRobotDirPath/Mac_OS"
}

dependencies {

  forceJunitPriority 'junit:junit:4.12'
  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-core:1.3'
  //testCompile project(":projects:core").sourceSets.test.output

  compile 'com.vividsolutions:jts:1.13'
  compile 'com.beust:jcommander:1.35'
  compile 'com.google.guava:guava:19.0'
  compile 'org.apache.commons:commons-lang3:3.3'
  compile 'org.slf4j:slf4j-api:1.7.6'
  // KJA necessary? See http://www.slf4j.org/manual.html
//  compile 'ch.qos.logback:logback-classic:1.0.13'
//  compile 'ch.qos.logback:logback-core:1.0.13'
  compile 'org.codehaus.groovy:groovy-all:2.4.6'

  compile fileTree(dir: robotLibDir(), include: '*.jar')
}



test {

  // See :projects:command project for explanation of this code
  workingDir rootDir

  // See :projects:command project for explanation of this code
  includes = ['']

}

