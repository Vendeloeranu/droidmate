// DroidMate, an automated execution generator for Android apps.
// Copyright (C) 2012-2018. Saarland University
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// Current Maintainers:
// Nataniel Borges Jr. <nataniel dot borges at cispa dot saarland>
// Jenny Hotzkow <jenny dot hotzkow at cispa dot saarland>
//
// Former Maintainers:
// Konrad Jamrozik <jamrozik at st dot cs dot uni-saarland dot de>
//
// web: www.droidmate.org
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'project-report'

apply from: file("../../../versions.gradle")

buildscript {
	apply from: file("../../../versions.gradle")
	ext.kotlin_version = project.ext.kotlin_version
	repositories {
		google()
		jcenter()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:3.1.3'
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

android {
	compileSdkVersion project.ext.androidCompileSdkVersion
	buildToolsVersion project.ext.androidBuildToolsVersion
	defaultConfig {
		applicationId "org.droidmate.uiautomator2daemon.UiAutomator2Daemon"
		minSdkVersion project.ext.androidMinSdkVersion
		targetSdkVersion project.ext.androidTargetSdkVersion
		versionCode 1
		versionName "1.0"

		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

		lintOptions {
			abortOnError false
		}
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	productFlavors {
	}
}

repositories {
	mavenCentral()
	jcenter()

	maven {
		url "https://maven.google.com"
	}
}

dependencies {
	implementation (project(path: ':deviceDaemonLib')){
		transitive = false
	}

	androidTestImplementation 'commons-io:commons-io:2.6'
//    androidTestCompile 'com.google.guava:guava:19.0'
	// Testing-only dependencies
	// Force usage of support annotations in the test app, since it is internally used by the runner module.
	//androidTestImplementation 'com.android.support:support-annotations:27.0.2'
	androidTestImplementation 'com.android.support.test:runner:1.0.1'
	//androidTestImplementation 'com.android.support.test:rules:1.0.1'
	// UiAutomator Testing
	androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
	//androidTestImplementation 'org.hamcrest:hamcrest-integration:1.3'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.26.0'
}
kotlin {
	experimental {
		coroutines "enable"
	}
}